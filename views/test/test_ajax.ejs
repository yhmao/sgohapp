<!DOCTYPE html>
<html>


    <%- include("../include/head.ejs") %>



<body>

<h2>The XMLHttpRequest Object</h2>

<div id="demo">
<p> AJAX will write output to following:</p>
<!-- <button type="button" onclick="loadDoc()">Change Content</button> -->
</div>

<div id="output" style="color:blue"></div>
<br>
<hr>
<br>

<h2>theForm</h2>
<form id="theForm"   method="post" enctype="multipart/form-data">
  <p>
    <label for="theText">text data:</label>
    <input id="theText" name="myText" value="Some text data" type="text" />
  </p>
  <p>
    <label for="thePassword">password:</label>
    <input id="thePassword" name="myPassword" value="Password..." type="text" />
  </p>
  <p>
    <label for="theFile">file data:</label>
    <input id="theFile" name="myFile" type="file" />
  </p>
  <button id="btn-theForm">Send Me!</button>
</form>
<b>div-theForm</b><br>
<div id="div-theForm"></div>

<script>
  $(document).ready(){
    var myText = $("input:text").val();
    var myPassword = $("#thePassword").val();
    console.log('myText:', myText);
    console.log('myPassword:', myPassword);
    $("#btn-theForm").click(function(event){
      console.log('button clicked');
      console.log('event:',event);
      event.preventDefault();
      $("#div-theFrom").load('/test/ajax',{myText:myText,myPassword:myPassword});

    })
  }
</script>





<hr>

<h2>With <code>"express"</code> npm package</h2>
    <form action="/test/ajax" enctype="multipart/form-data" method="post">
      <div>Text field title: <input type="text" name="title" /></div>
      <div>File: <input type="file" name="someExpressFiles" multiple="multiple" /></div>
      <input type="submit" value="Upload" />
    </form>

<hr>

<script>
// console.log('start of script');
//
// window.addEventListener('load', () => {
//   const text = document.getElementById("theText");
//   const file = {
//     dom: document.getElementById("theFile"),
//     binary: null,
//   };
//
//   // Use the FileReader API to access file content
//   const reader = new FileReader();
//   // console.log('reader:', reader);
//
//   // Because FileReader is asynchronous, store its
//   // result when it finishes to read the file
//   reader.addEventListener("load", () => {
//     file.binary = reader.result;
//     // console.log('file.binary:', reader.result);
//
//   });
//
//
//
//   // At page load, if a file is already selected, read it.
//   if (file.dom.files[0]) {
//     reader.readAsBinaryString(file.dom.files[0]);
//   }
//
//   // If not, read the file once the user selects it.
//   file.dom.addEventListener("change", () => {
//     if (reader.readyState === FileReader.LOADING) {
//       reader.abort();
//     }
//
//     reader.readAsBinaryString(file.dom.files[0]);
//   });
//
//   // sendData is our main function
//   function sendData() {
//     // If there is a selected file, wait it is read
//     // If there is not, delay the execution of the function
//     if (!file.binary && file.dom.files.length > 0) {
//       console.log('setTimeout 10');
//       setTimeout(sendData, 10);
//       return;
//     }
//
//     // To construct our multipart form data request,
//     // We need an XMLHttpRequest instance
//     const XHR = new XMLHttpRequest();
//
//     // We need a separator to define each part of the request
//     const boundary = "blob";
//
//     // Store our body request in a string.
//     let data = "";
//
//     // So, if the user has selected a file
//     if (file.dom.files[0]) {
//
//       console.log('file.dom.files[0]:', file.dom.files[0]);
//       // Start a new part in our body's request
//       data += `--${boundary}\r\n`;
//
//       // Describe it as form data
//       data += 'content-disposition: form-data; '
//       // Define the name of the form data
//             + `name="${file.dom.name}"; `
//       // Provide the real name of the file
//             + `filename="${file.dom.files[0].name}"\r\n`;
//       // And the MIME type of the file
//       data += `Content-Type: ${file.dom.files[0].type}\r\n`;
//
//       // There's a blank line between the metadata and the data
//       data += '\r\n';
//
//       // Append the binary data to our body's request
//       data += file.binary + '\r\n';
//     }
//
//     // Text data is simpler
//     // Start a new part in our body's request
//     data += `--${boundary}\r\n`;
//
//     // Say it's form data, and name it
//     data += `content-disposition: form-data; name="${text.name}"\r\n`;
//     // There's a blank line between the metadata and the data
//     data += '\r\n';
//
//     // Append the text data to our body's request
//     data += text.value + "\r\n";
//
//     // Once we are done, "close" the body's request
//     data += `--${boundary}--`;
//
//     // console.log('data:', data);
//
//     // Define what happens on successful data submission
//     XHR.addEventListener('load', (event) => {
//       console.log('XHR.addEventListener.load...');
//       // console.log('$(this):', $(this));
//       //document.getElementById("output").innerHTML = event.target.responseText;
//       $("#output").html('<p>using jquery:</p>' + "<p>" + event.target.responseText + "</p>")
//       // alert('Yeah! Data sent and response loaded.');
//     });
//
//     // Define what happens in case of error
//     XHR.addEventListener('error', (event) => {
//       alert('Oops! Something went wrong.');
//     });
//
//     // Set up our request
//     XHR.open('POST', '/test/ajax');
//
//     // Add the required HTTP header to handle a multipart form data POST request
//     XHR.setRequestHeader('Content-Type', `multipart/form-data; boundary=${boundary}`);
//
//     // Send the data
//     XHR.send(data);
//   }
//
//   // Get the form element
//   const form = document.getElementById('theForm');
//
//   // Add 'submit' event handler
//   form.addEventListener('submit', (event) => {
//     event.preventDefault();
//     sendData();
//   });
// });
//
// // console.log('$document:', $(document));
// // console.log('$:', $());
// // console.log('document.ready:', $(document).ready());
// // console.log('$:', $);
// // console.log('$(this):', $(this));
//
// console.log('$("form p:last"):', $("form p:last"));
//
//
// console.log('end of script');
</script>

</body>
</html>
